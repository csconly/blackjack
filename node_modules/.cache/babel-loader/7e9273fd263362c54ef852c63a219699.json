{"ast":null,"code":"import { version } from \"react\";\nexport const deck = buildCardDeck();\n\nfunction buildCardDeck() {\n  let suits = ['C', 'D', 'H', 'S'];\n  let value = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 'A'];\n  let deck = [];\n\n  for (let i = 0; i < value.length; i++) {\n    let tempVal = value[i];\n\n    for (let j = 0; j < suits.length; j++) {\n      if (tempVal === 'J' || tempVal === 'Q' || tempVal === 'K') {\n        console.log(\"its a face non ace\");\n        tempVal = 10;\n        deck.push({\n          value: tempVal,\n          valueA: \"\",\n          image: value[i] + suits[j] + \".jpg\"\n        });\n      } else if (tempVal === 'A') {\n        console.log(\"its an ace\");\n        tempVal = 1;\n        deck.push({\n          value: tempVal,\n          valueA: 11,\n          image: value[i] + suits[j] + \".jpg\"\n        });\n      } else {\n        console.log(\"its a number\");\n        deck.push({\n          value: tempVal,\n          valueA: \"\",\n          image: value[i] + suits[j] + \".jpg\"\n        });\n      }\n    }\n  }\n\n  return deck;\n}","map":{"version":3,"sources":["/Users/claytonconly/Documents/Projects/blackjack/src/js/constants.js"],"names":["version","deck","buildCardDeck","suits","value","i","length","tempVal","j","console","log","push","valueA","image"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,OAAO,MAAMC,IAAI,GAAGC,aAAa,EAA1B;;AAEP,SAASA,aAAT,GAAyB;AACrB,MAAIC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,GAA5C,CAAZ;AACA,MAAIH,IAAI,GAAG,EAAX;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,QAAIE,OAAO,GAAGH,KAAK,CAACC,CAAD,CAAnB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACG,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,UAAID,OAAO,KAAK,GAAZ,IAAmBA,OAAO,KAAK,GAA/B,IAAsCA,OAAO,KAAK,GAAtD,EAA2D;AACvDE,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,QAAAA,OAAO,GAAG,EAAV;AACAN,QAAAA,IAAI,CAACU,IAAL,CACI;AACIP,UAAAA,KAAK,EAAEG,OADX;AAEIK,UAAAA,MAAM,EAAE,EAFZ;AAGIC,UAAAA,KAAK,EAAET,KAAK,CAACC,CAAD,CAAL,GAAWF,KAAK,CAACK,CAAD,CAAhB,GAAsB;AAHjC,SADJ;AAOH,OAVD,MAUO,IAAID,OAAO,KAAK,GAAhB,EAAqB;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,QAAAA,OAAO,GAAG,CAAV;AACAN,QAAAA,IAAI,CAACU,IAAL,CACI;AACIP,UAAAA,KAAK,EAAEG,OADX;AAEIK,UAAAA,MAAM,EAAE,EAFZ;AAGIC,UAAAA,KAAK,EAAET,KAAK,CAACC,CAAD,CAAL,GAAWF,KAAK,CAACK,CAAD,CAAhB,GAAsB;AAHjC,SADJ;AAOH,OAVM,MAUA;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAT,QAAAA,IAAI,CAACU,IAAL,CACI;AACIP,UAAAA,KAAK,EAAEG,OADX;AAEIK,UAAAA,MAAM,EAAE,EAFZ;AAGIC,UAAAA,KAAK,EAAET,KAAK,CAACC,CAAD,CAAL,GAAWF,KAAK,CAACK,CAAD,CAAhB,GAAsB;AAHjC,SADJ;AAOH;AACJ;AACJ;;AACD,SAAOP,IAAP;AACH","sourcesContent":["import { version } from \"react\";\n\nexport const deck = buildCardDeck();\n\nfunction buildCardDeck() {\n    let suits = ['C', 'D', 'H', 'S'];\n    let value = [2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K', 'A'];\n    let deck = [];\n    for (let i = 0; i < value.length; i++) {\n        let tempVal = value[i];\n        for (let j = 0; j < suits.length; j++) {\n            if (tempVal === 'J' || tempVal === 'Q' || tempVal === 'K') {\n                console.log(\"its a face non ace\");\n                tempVal = 10;\n                deck.push(\n                    {\n                        value: tempVal,\n                        valueA: \"\",\n                        image: value[i] + suits[j] + \".jpg\"\n                    }\n                );\n            } else if (tempVal === 'A') {\n                console.log(\"its an ace\");\n                tempVal = 1\n                deck.push(\n                    {\n                        value: tempVal,\n                        valueA: 11,\n                        image: value[i] + suits[j] + \".jpg\"\n                    }\n                );\n            } else {\n                console.log(\"its a number\");\n                deck.push(\n                    {\n                        value: tempVal,\n                        valueA: \"\",\n                        image: value[i] + suits[j] + \".jpg\"\n                    }\n                );\n            }\n        }\n    }\n    return deck;\n}"]},"metadata":{},"sourceType":"module"}